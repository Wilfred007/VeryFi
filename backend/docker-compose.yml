version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: zk-health-postgres
    environment:
      POSTGRES_DB: zk_health_pass
      POSTGRES_USER: zkhealth
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zkhealth -d zk_health_pass"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: zk-health-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ZK Health Pass Backend API
  api:
    build: .
    container_name: zk-health-api
    environment:
      - DATABASE_URL=postgresql://zkhealth:password@postgres:5432/zk_health_pass
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRATION_HOURS=24
      - SERVER_ADDRESS=0.0.0.0:3000
      - NOIR_CIRCUIT_PATH=/app/noir
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173
      - RATE_LIMIT_RPM=60
      - RUST_LOG=info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./noir:/app/noir:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: zk-health-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
