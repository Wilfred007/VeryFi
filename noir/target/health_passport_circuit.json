{"noir_version":"1.0.0-beta.8+ba05d729b9753aa5ce2b076c1dd4795edb173f68","hash":"2430784688888719647","abi":{"parameters":[{"name":"msg_hash","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pubkey_x","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pubkey_y","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"signature_r","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"signature_s","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"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","debug_symbols":"pZbbattAFEX/Rc9+mDn7zC2/UkpwHCUYhGwUu1BC/r1StJwmD4WiPG3bmrM8CzHsee0e+4fr8/1xfDq9dHc/XruH6TgMx+f74XTYX46ncf719W3X3b7eX6a+n3/qPj2fp877qR8v3d14HYZd92s/XN8XvZz343te9tP8NOy6fnyccwY+HYd++fS2+zsd/j2qchtW9Y/x9N/zbrd515Z5Nb/Nx7Ll/1tmPlvaMJ/Lx/wm/ypjvrq+OV83zLdQmG/xm/O2Zf+tifkYwpYXGIPFD4K+vsKf87f94Th9OTRdzGF+77s547xsSevuypIinUzz/pbMZCErz9uaJZBxfV6MFAmvJDKThaysa2vWQMKr7K+yvwqvwqvsr7K/Cq/Ca+yvRRJeg9ecdfg2eA1ew7etvhYCGcnV14JIJxOZWVfISsKLq6/FSMKL8KKzLpHwIrxYWbf6msEzeLb6momEZ/Ass66Q8Aye8BW+gid4wlf4Cp7gCV/h6/AcnuPr+Do8h+f4Or4Oz+ElfBO+CV6Cl/BN+CZ4CV7CN+Gb4WV4nA/jfBjnwzI8zodxPizDy/A4H1bwLfAKvIJvwbfAK/AKvgXfCq/Cq/hWfCu8Cq/iW/Gt8Cq8hm/Dt8Fr8Bq+Dd8Gr8Fr+LbVVyGQkVx9FUQ6mcjMukJWEl5cfRUjCS/Ci866RMKL8GJl3eorg2fwbPWViYRn8CyzrpDwDJ7wFb6CJ3jCV/gKnuAJX+Hr8Bye4+v4OjyH5/g6vg7P4SV8E74JXoKX8E34JngJXsI34ZvhZXgZ34xvhkd/KOOb8aU/RH+o4Et/iP4Q/SH6Q/SH6A/RH6I/RH+I/hD9IfpD9IfoD9Efoj9Ef4j+EP0h+kP0h+gP0R+iP0R/iP4Q/SH6Q/SH0x9Ofzj94fSH0x9Ofzj94fSH0x9Ofzj94fSH0x9Of/hyPmJYPszAGN+Wy8R03D8MPZfop+t4+HSnvvw+357cbt3n6XToH69Tv1wl3p/Nl4s/","file_map":{"50":{"source":"use dep::std;\n\n// Optimized ECDSA verification circuit (removes constant return warning)\nfn main(\n    msg_hash: [u8; 32],\n    pubkey_x: [u8; 32],\n    pubkey_y: [u8; 32],\n    signature_r: [u8; 32],\n    signature_s: [u8; 32]\n) {\n    \n    // Create signature array [r || s]\n    let mut signature_bytes: [u8; 64] = [0; 64];\n    for i in 0..32 {\n        signature_bytes[i] = signature_r[i];\n        signature_bytes[i + 32] = signature_s[i];\n    }\n    \n    // Verify ECDSA signature\n    let is_valid = std::ecdsa_secp256k1::verify_signature::<32>(\n        pubkey_x,\n        pubkey_y,\n        signature_bytes,\n        msg_hash\n    );\n    \n    // Assert signature is valid\n    assert(is_valid);\n    \n    // Basic public key validation\n    let mut pubkey_x_zero = true;\n    let mut pubkey_y_zero = true;\n    \n    for i in 0..32 {\n        if pubkey_x[i] != 0 {\n            pubkey_x_zero = false;\n        }\n        if pubkey_y[i] != 0 {\n            pubkey_y_zero = false;\n        }\n    }\n    \n    assert(!pubkey_x_zero);\n    assert(!pubkey_y_zero);\n}","path":"/home/wilfred/Projects/zk_health_pass/noir/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert"]}